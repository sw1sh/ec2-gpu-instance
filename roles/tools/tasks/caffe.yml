---
- name: Install caffe dependencies
  apt: pkg={{ caffe_dependencies }} state=installed update_cache=yes

- name: Restart server
  shell: sleep 2 && /sbin/shutdown -r now
  async: 1
  poll: 0
  ignore_errors: true

- name: Wait for server to restart
  local_action:
    module: wait_for host={{ inventory_hostname }} port=22 delay=30 timeout=120 connect_timeout=15 state=started
  become: false

- name: Cloning caffe git repo
  git: repo=https://github.com/BVLC/caffe.git dest={{ caffe_path }}
  become: false

- name: Install python dependencies
  shell: "{{ anaconda_path }}/bin/pip install {{ item }}"
  with_items:
    - leveldb
    - protobuf
    - python-gflags
  become: false

- name: Copy Makefile.config file to instance
  copy: src=Makefile.config dest={{ caffe_path }}/Makefile.config
  become: false

- name: Add caffe to the PATH
  lineinfile: dest=~/.bashrc line="export CAFFE_ROOT={{ caffe_path }}"
  become: false

- name: Link libhdf5
  command: "{{item}}"
  with_items:
   - ln -fs libhdf5.so.7 libhdf5.so.9
   - ln -fs libhdf5_hl.so.7 libhdf5_hl.so.9
   - ldconfig
  args:
    chdir: /usr/lib/x86_64-linux-gnu

- name: Fix libdc1394 error
  file: src=/dev/null dest=/dev/raw1394 state=link

- name: Build caffe all
  command: make all -j8
  args:
    chdir: "{{ caffe_path }}"
  become: false

- name: Build caffe pycaffe
  command: make pycaffe
  args:
    chdir: "{{ caffe_path }}"
  become: false

- name: Build caffe distribute
  command: make distribute
  args:
    chdir: "{{ caffe_path }}"
  become: false

- name: Add pycaffe distribution to the PYTHONPATH
  lineinfile: dest=~/.bashrc line="export PYTHONPATH={{ caffe_path }}/distribute/python:$PYTHONPATH"
  become: false

- name: Add caffe binaries to PATH
  lineinfile: dest=~/.bashrc line="export PATH={{ caffe_path }}/build/tools:$PATH"
  become: false

- name: Add lib to LD_LIBRARY_PATH
  lineinfile: dest=~/.bashrc line="export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:{{ caffe_path }}/build/lib:{{ anaconda_path }}/lib"
  become: false

- name: Restart server
  shell: sleep 2 && /sbin/shutdown -r now
  async: 1
  poll: 0
  ignore_errors: true

- name: Wait for server to restart
  local_action:
    module: wait_for host={{ inventory_hostname }} delay=30 timeout=120 state=started
  become: false

